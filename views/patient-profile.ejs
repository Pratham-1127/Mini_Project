<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles/patient-profile.css">
</head>
<body>
    <%- include("partials/patient-navbar.ejs") %>
    <div class="container">
        <h1>Patient Profile</h1>
        <div class="profile-info">
            <div class="profile-header">
                <!-- Hidden input for image upload -->
                <input type="hidden" id="patientId" value="<%= patientId %>">
                <input type="file" id="image-upload" style="display:none;" accept="image/*">
                <img src="<%= patient.image %>" alt="<%= patient.first_name %> <%= patient.last_name %>" class="profile-image" id="profileImage">
                <div class="profile-details">
                    <h2 contenteditable="false" id="first_name"><%= patient.first_name %></h2>
                    <h2 contenteditable="false" id="last_name"><%= patient.last_name %></h2>
                </div>
            </div>
            <p><strong>Date of Birth:</strong> <span contenteditable="false" id="date_of_birth"><%= patient.date_of_birth %></span></p>
            <p><strong>Gender:</strong> 
                <select id="gender" disabled>
                    <option value="Male" <%= patient.gender === 'Male' ? 'selected' : '' %>>Male</option>
                    <option value="Female" <%= patient.gender === 'Female' ? 'selected' : '' %>>Female</option>
                    <option value="Others" <%= patient.gender === 'Others' ? 'selected' : '' %>>Others</option>
                </select>
            </p>
            <p><strong>Phone Number:</strong> <span contenteditable="false" id="phone_number"><%= patient.phone_number %></span></p>
            <p><strong>Email:</strong> <span contenteditable="false" id="email"><%= patient.email %></span></p>
            <p><strong>Address:</strong> <span contenteditable="false" id="address"><%= patient.address %></span></p>
            <div class="btn-container">
                <button id="edit-btn" class="btn">Edit Profile</button>
                <button id="save-btn" class="btn" style="display:none;">Save Changes</button>
                <a href="/patient-appointments" class="btn">My Appointments</a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const editBtn = document.getElementById('edit-btn');
        const saveBtn = document.getElementById('save-btn');
        const editableFields = document.querySelectorAll('[contenteditable="false"]');
        const profileImage = document.getElementById('profileImage');
        const imageUpload = document.getElementById('image-upload');
        const genderField = document.getElementById('gender');
        let isEditing = false;

        // Toggle edit mode
        editBtn.addEventListener('click', () => {
            editableFields.forEach(field => {
                field.contentEditable = "true";
                field.classList.add('editable');
            });
            genderField.disabled = false;
            isEditing = true;
            editBtn.style.display = 'none';
            saveBtn.style.display = 'inline-block';
        });

        // Handle image click based on mode (view or edit)
        profileImage.addEventListener('click', () => {
            if (isEditing) {
                imageUpload.click();
            } else {
                profileImage.classList.toggle('zoomed');
            }
        });

        // Handle image upload
        imageUpload.addEventListener('change', (event) => {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    profileImage.src = e.target.result; // Update the displayed image
                };
                reader.readAsDataURL(file);
            }
        });

        // Validation function for profile fields
        function validateProfile() {
            const firstName = document.getElementById('first_name').textContent.trim();
            const lastName = document.getElementById('last_name').textContent.trim();
            const dateOfBirth = document.getElementById('date_of_birth').textContent.trim();
            const gender = document.getElementById('gender').value.trim();
            const phoneNumber = document.getElementById('phone_number').textContent.trim();
            const email = document.getElementById('email').textContent.trim();
            const address = document.getElementById('address').textContent.trim();

            // Regular expressions
            const nameRegex = /^[A-Za-z]+$/;
            const phoneRegex = /^[0-9]{10}$/;
            const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;

            // First name validation
            if (!firstName || !nameRegex.test(firstName)) {
                alert('First Name must contain only alphabets and cannot be empty.');
                return false;
            }

            // Last name validation
            if (!lastName || !nameRegex.test(lastName)) {
                alert('Last Name must contain only alphabets and cannot be empty.');
                return false;
            }

            // Date of birth validation
            if (!dateOfBirth) {
                alert('Date of Birth cannot be empty.');
                return false;
            }

            // Gender validation
            if (!["Male", "Female", "Others"].includes(gender)) {
                alert('Please select a valid gender.');
                return false;
            }

            // Phone number validation
            if (!phoneRegex.test(phoneNumber)) {
                alert('Phone Number must be a 10-digit number.');
                return false;
            }

            // Email validation (Gmail only)
            if (!emailRegex.test(email)) {
                alert('Please enter a valid Gmail address (must end with @gmail.com).');
                return false;
            }

            // Address validation
            if (!address) {
                alert('Address cannot be empty.');
                return false;
            }

            return true;
        }

        // Save updated patient info with validation
        saveBtn.addEventListener('click', async () => {
            if (!validateProfile()) {
                return;
            }

            const formData = new FormData();
            formData.append('first_name', document.getElementById('first_name').textContent.trim());
            formData.append('last_name', document.getElementById('last_name').textContent.trim());
            formData.append('date_of_birth', document.getElementById('date_of_birth').textContent.trim());
            formData.append('gender', document.getElementById('gender').value);
            formData.append('phone_number', document.getElementById('phone_number').textContent.trim());
            formData.append('email', document.getElementById('email').textContent.trim());
            formData.append('address', document.getElementById('address').textContent.trim());

            if (imageUpload.files[0]) {
                formData.append('image', imageUpload.files[0]);
            }

            formData.append('patientId', document.getElementById('patientId').value);

            try {
                const response = await fetch('/update-patient', {
                    method: 'POST',
                    body: formData,
                });

                if (!response.ok) {
                    throw new Error('Failed to update profile');
                }

                const result = await response.json();
                if (result.success) {
                    alert('Profile updated successfully!');
                    window.location.reload();
                } else {
                    alert('Error updating profile.');
                }
            } catch (err) {
                console.error(err);
                alert('Failed to update profile.');
            }
        });
    </script>
</body>
</html>
